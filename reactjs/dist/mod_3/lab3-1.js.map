{"version":3,"sources":["../../mod_3/lab3-1.js"],"names":["NumberList","props","numbers","listItems","map","number","toString","ReactDOM","render","document","getElementById","CustomTextInput","React","Component","constructor","focus","bind","textInput","style","border","console","log","findDOMNode","opacity","input"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,KAApB,EAA2B;AACvB,UAAMC,UAAUD,MAAMC,OAAtB;AACA,UAAMC,YAAYD,QAAQE,GAAR,CAAaC,MAAD,IAC1B;AAAA;AAAA,UAAI,KAAKA,OAAOC,QAAP,EAAT;AAA6BD;AAA7B,KADc,CAAlB;AAGA,WACI;AAAA;AAAA;AAAKF;AAAL,KADJ;AAGH;;AAED,MAAMD,UAAU,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAhB;AACAK,SAASC,MAAT,CACI,oBAAC,UAAD,IAAY,SAASN,OAArB,GADJ,EAEIO,SAASC,cAAT,CAAwB,MAAxB,CAFJ;;AAKA,MAAMC,eAAN,SAA8BC,MAAMC,SAApC,CAA8C;AAC1CC,gBAAYb,KAAZ,EAAkB;AACd,cAAMA,KAAN;AACA,aAAKc,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAEDD,YAAQ;AACJ,aAAKE,SAAL,CAAeF,KAAf;AACA,aAAKE,SAAL,CAAeC,KAAf,CAAqBC,MAArB,GAA8B,eAA9B;AACAC,gBAAQC,GAAR,CAAYd,SAASe,WAAT,CAAqB,IAArB,CAAZ;AACAf,iBAASe,WAAT,CAAqB,IAArB,EAA2BJ,KAA3B,CAAiCK,OAAjC,GAA2C,EAA3C;AACH;;AAEDf,aAAQ;AACJ,eACI;AAAA;AAAA;AACI,2CAAO,MAAK,MAAZ,EAAmB,KAAMgB,KAAD,IAAW;AAAC,yBAAKP,SAAL,GAAiBO,KAAjB;AAAwB,iBAA5D,GADJ;AAEI,2CAAO,MAAK,QAAZ,EAAqB,OAAM,uBAA3B,EAAmD,SAAS,KAAKT,KAAjE;AAFJ,SADJ;AAMH;AApByC;AAsB9CR,SAASC,MAAT,CACI,oBAAC,eAAD,OADJ,EAEIC,SAASC,cAAT,CAAwB,MAAxB,CAFJ","file":"lab3-1.js","sourcesContent":["function NumberList(props) {\n    const numbers = props.numbers;\n    const listItems = numbers.map((number) =>\n        <li key={number.toString()}>{number}</li>\n    );\n    return (\n        <ul>{listItems}</ul>\n    );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n    <NumberList numbers={numbers} />,\n    document.getElementById('root')\n);\n\nclass CustomTextInput extends React.Component {\n    constructor(props){\n        super(props);\n        this.focus = this.focus.bind(this)\n    }\n\n    focus() {\n        this.textInput.focus();\n        this.textInput.style.border = \"5px solid red\";\n        console.log(ReactDOM.findDOMNode(this));\n        ReactDOM.findDOMNode(this).style.opacity = .5;\n    }\n\n    render(){\n        return(\n            <div>\n                <input type=\"text\" ref={(input) => {this.textInput = input;}} />\n                <input type=\"button\" value=\"Focus this text input\" onClick={this.focus}/>\n            </div>\n        );\n    }\n}\nReactDOM.render(\n    <CustomTextInput />,\n    document.getElementById('refs')\n);"]}