{"version":3,"sources":["../../mod_2/mod_2-3.js"],"names":["Toggle","React","Component","constructor","props","state","isToggleOn","handleClick","bind","setState","prevState","render","ReactDOM","document","getElementById"],"mappings":"AAAA,MAAMA,MAAN,SAAqBC,MAAMC,SAA3B,CAAqC;AACjCC,gBAAYC,KAAZ,EAAmB;AACf,cAAMA,KAAN;AACA,aAAKC,KAAL,GAAa,EAACC,YAAY,IAAb,EAAb;;AAEA;AACA,aAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,kBAAc;AACV,aAAKE,QAAL,CAAcC,cAAc;AACxBJ,wBAAY,CAACI,UAAUJ;AADC,SAAd,CAAd;AAGH;;AAEDK,aAAS;AACL,eACI;AAAA;AAAA,cAAQ,SAAS,KAAKJ,WAAtB;AACK,iBAAKF,KAAL,CAAWC,UAAX,GAAwB,IAAxB,GAA+B;AADpC,SADJ;AAKH;AArBgC;;AAwBrCM,SAASD,MAAT,CACI,oBAAC,MAAD,OADJ,EAEIE,SAASC,cAAT,CAAwB,MAAxB,CAFJ","file":"mod_2-3.js","sourcesContent":["class Toggle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {isToggleOn: true};\n\n        // Это связывание необходимо делать работой `this` в функции обратного вызова\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState(prevState => ({\n            isToggleOn: !prevState.isToggleOn\n        }));\n    }\n\n    render() {\n        return (\n            <button onClick={this.handleClick}>\n                {this.state.isToggleOn ? 'ON' : 'OFF'}\n            </button>\n        );\n    }\n}\n\nReactDOM.render(\n    <Toggle />,\n    document.getElementById('root')\n);"]}