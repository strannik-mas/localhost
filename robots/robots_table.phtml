<html>
<head>
   <meta charset="utf-8">
   <title>Проверка robots.txt</title>
</head>
<body>
	<h1>Проверить сайт</h1>
    <form action="<?php echo $_SERVER['PHP_SELF']; ?>" method="post">
    <label for="datepicker">Введите URL: </legend>
    <input type="text" name="url" id="url" value="http://" type="url">
    <input type="submit" value="Проверить">
    </form>
	</br>
</body>
</html>
<?php

	$errMsg = ""; 			//сообщение об ошибке	
		
	$nalichie_txt = 'Проверка наличия файла robots.txt';
	$nalichie_status = ''; 	// статус файла
	$nalichie_sost = ''; 	// состояние файла
	$nalichie_recom = '';	// Рекомендации по наличию файла
	
	$host_txt = 'Проверка указания директивы Host';
	$host_status = ''; 	// статус директивы Host
	$host_sost = ''; 	// состояние директивы Host
	$host_recom = '';	// Рекомендации по наличию директивы Host
	
	$host_num_txt = 'Проверка количества директив Host, прописанных в файле';
	$host_num_status = ''; 	// статус количества директив Host
	$host_num_sost = ''; 	// состояние количества директив Host
	$host_num_recom = '';	// Рекомендации по наличию количества директив Host
	
	$size_txt = 'Проверка размера размера файла robots.txt';
	$size_status = ''; 	// статус размера файла
	$size_sost = ''; 	// состояние размера файла
	$size_recom = '';	// Рекомендации по наличию размера файла
	
	$sitemap_txt = 'Проверка указания директивы Sitemap';
	$sitemap_status = ''; 	// статус директивы Sitemap
	$sitemap_sost = ''; 	// состояние директивы Sitemap
	$sitemap_recom = '';	// Рекомендации по наличию директивы Sitemap
	
	$otvet_txt = 'Проверка кода ответа сервера для файла robots.txt';
	$otvet_status = ''; 	// статус ответа сервера
	$otvet_sost = ''; 	// состояние ответа сервера
	$otvet_recom = '';	// Рекомендации по наличию ответа сервера 
	
	//существование файла
	function fileExists($path){
		return (@fopen($path,"r")==true);
	}
	// Существование ссылки (URL)
	function open_url($url)
	{
		$url_c=parse_url($url);
	 
		if (!empty($url_c['host']) and checkdnsrr($url_c['host']))
		{
			return true;
		}
		return false;     
	}	
	
	if ($_SERVER['REQUEST_METHOD'] == "POST"){		 
		if (!strstr($_POST["url"],"://"))
			{
				$_POST["url"]="http://".$_POST["url"];
			}
		if(open_url($_POST["url"])){
			$r_url = $_POST["url"].'/robots.txt';				
			if(fileExists($r_url)){
				$file = new SplFileObject($r_url);
				$nalichie_status = 'Ок';
				$nalichie_sost = 'Файл robots.txt присутствует';
				$nalichie_recom = 'Доработки не требуются';
				$i = 0; 	//счетчик для директивы Host
				$j = 0; 	//счетчик для директивы Sitemap
				while($file->valid()){
					switch(explode(":", $file->current())[0]){
						case 'Host':
							$i++;
							break;
						case 'Sitemap':
							$j++;
							break;
					}
					$file->next();
				}
				if($i){
					$host_status = 'Ок'; 
					$host_num_status = 'Ок';
					$host_sost = 'Директива Host указана'; 	
					$host_num_sost = 'В файле прописана 1 директива Host'; 	
					$host_recom = 'Доработки не требуются';	
					$host_num_recom = 'Доработки не требуются';	
				}elseif ($i > 1){
					$host_num_status = 'Ошибка'; 	
					$host_num_sost = 'В файле прописано несколько директив Host'; 	
					$host_num_recom = 'Программист: Директива Host должна быть указана в файле толоко 1 раз. Необходимо удалить все дополнительные директивы Host и оставить только 1, корректную и соответствующую основному зеркалу сайта';	
				}else{
					$host_status = 'Ошибка'; 	
					$host_num_status = 'Ошибка'; 	
					$host_sost = 'В файле robots.txt не указана директива Host'; 	
					$host_num_sost = 'В файле robots.txt не указана директива Host'; 	
					$host_recom = 'Программист: Для того, чтобы поисковые системы знали, какая версия сайта является основных зеркалом, необходимо прописать адрес основного зеркала в директиве Host. В данный момент это не прописано. Необходимо добавить в файл robots.txt директиву Host. Директива Host задётся в файле 1 раз, после всех правил.';
				}
				if($j){
					$sitemap_status = 'ОК'; 	
					$sitemap_sost = 'Директива Sitemap указана'; 	
					$sitemap_recom = 'Доработки не требуются';
				}else{
					$sitemap_status = 'Ошибка'; 	
					$sitemap_sost = 'В файле robots.txt не указана директива Sitemap'; 	
					$sitemap_recom = 'Программист: Добавить в файл robots.txt директиву Sitemap';
				}
				//размер файла из заголовка Content-Length
				foreach(get_headers($r_url) as $k=>$header){
					if(explode(":", $header)[0] == 'Content-Length'){
						$size = explode(":", $header)[1];
						if($size < 32000){
							$size_status = 'ОК'; 	
							$size_sost = 'Размер файла robots.txt составляет '.$size.' байт, что находится в пределах допустимой нормы'; 	
							$size_recom = 'Доработки не требуются';
						}else{
							$size_status = 'Ошибка'; 	
							$size_sost = 'Размер файла robots.txt составляет '.$size.' байт, что превышает допустимую норму'; 	
							$size_recom = 'Программист: Максимально допустимый размер файла robots.txt составляем 32 кб. Необходимо отредактировть файл robots.txt таким образом, чтобы его размер не превышал 32 Кб';
						}
					}						
				}
				
				
				//код ответа на файл
				$otvet = substr(get_headers($r_url)[0], 9, 3);
				if($otvet = 200){
					$otvet_status = 'ОК'; 	
					$otvet_sost = 'Файл robots.txt отдаёт код ответа сервера 200'; 	
					$otvet_recom = 'Доработки не требуются';
				}else{
					$otvet_status = 'Ошибка'; 	
					$otvet_sost = 'При обращении к файлу robots.txt сервер возвращает код ответа'.$otvet; 	
					$otvet_recom = 'Программист: Файл robots.txt должны отдавать код ответа 200, иначе файл не будет обрабатываться. Необходимо настроить сайт таким образом, чтобы при обращении к файлу sitemap.xml сервер возвращает код ответа 200';
				}
				
			}else{
				$nalichie_status = 'Ошибка';
				$nalichie_sost = "Файл robots.txt отсутствует";
				$nalichie_recom = 'Программист: Создать файл robots.txt и разместить его на сайте.';
				$errMsg = "Файл robots.txt отсутствует";
			}
			
		}else $errMsg = "Такого сайта нет или он недоступен";
			
	
		//запись в файл robots.xslx
		require_once 'PHPExcel.php'; 
		require_once('PHPExcel/Writer/Excel5.php');
		$fileName = 'robots.xlsx';
		$old_size = filesize($fileName);
		$xls = new PHPExcel();
		$xls = PHPExcel_IOFactory::load($fileName);
		$xls->setActiveSheetIndex(0);
		$sheet = $xls->getActiveSheet();
		$cell_num = 2; //счетчик для ячеек
		$row_num = 2; //счетчик для строк
		//перерисуем сохраненный файл
		$rowIterator = $sheet->getRowIterator();
		foreach ($rowIterator as $row) {
			$cellIterator = $row->getCellIterator();
			foreach ($cellIterator as $cell){
				$sheet->setCellValueByColumnAndRow(
					$cell_num-1,
					$row_num,
					$cell->getCalculatedValue()
				);
			}
		}
		$sheet->setTitle('Данные файлов robots.txt');
		$sheet->setCellValue("A1", 'URL');
		$sheet->setCellValue("B1", 'Название проверки');
		$sheet->setCellValue("C1", 'Статус');
		$sheet->setCellValue("D1", 'Текущее состояние');
		$sheet->setCellValue("E1", 'Рекомендации');
		$sheet->getStyle('A1:E1')->getFill()->setFillType(
			PHPExcel_Style_Fill::FILL_SOLID);
		$sheet->getStyle('A1:E1')->getFill()->getStartColor()->setRGB('A2C4C9');
		$k = $sheet->getHighestRow()+1;
		$sheet->getColumnDimension('A')->setWidth(30);
		$sheet->getColumnDimension('B')->setWidth(40);
		$sheet->getColumnDimension('C')->setWidth(10);
		$sheet->getColumnDimension('D')->setWidth(30);
		$sheet->getColumnDimension('E')->setWidth(50);
		$sheet->setCellValue("A".$k, $r_url);
		$sheet->setCellValue("B".$k, $nalichie_txt);
		$sheet->setCellValue("C".$k, $nalichie_status);
		$sheet->setCellValue("D".$k, $nalichie_sost);
		$sheet->setCellValue("E".$k, $nalichie_recom);
		$k++;
		$sheet->setCellValue("B".$k, $host_txt);
		$sheet->setCellValue("C".$k, $host_status);
		$sheet->setCellValue("D".$k, $host_sost);
		$sheet->setCellValue("E".$k, $host_recom);
		$k++;
		$sheet->setCellValue("B".$k, $host_num_txt);
		$sheet->setCellValue("C".$k, $host_num_status);
		$sheet->setCellValue("D".$k, $host_num_sost);
		$sheet->setCellValue("E".$k, $host_num_recom);
		$k++;
		$sheet->setCellValue("B".$k, $size_txt);
		$sheet->setCellValue("C".$k, $size_status);
		$sheet->setCellValue("D".$k, $size_sost);
		$sheet->setCellValue("E".$k, $size_recom);
		$k++;
		$sheet->setCellValue("B".$k, $sitemap_txt);
		$sheet->setCellValue("C".$k, $sitemap_status);
		$sheet->setCellValue("D".$k, $sitemap_sost);
		$sheet->setCellValue("E".$k, $sitemap_recom);
		$k++;
		$sheet->setCellValue("B".$k, $otvet_txt);
		$sheet->setCellValue("C".$k, $otvet_status);
		$sheet->setCellValue("D".$k, $otvet_sost);
		$sheet->setCellValue("E".$k, $otvet_recom);
		$k++;
		// сохраняем в файл
		$objWriter = PHPExcel_IOFactory::createWriter($xls, 'Excel2007');
		$objWriter->save($fileName);
		if($old_size != filesize($fileName)) echo "<h2>Данные записаны в файл</h2>";
		else $errMsg = "Запись в файл не удалась";
		
		if ($errMsg) echo "<h3>$errMsg</h3>";	
	}
?>
